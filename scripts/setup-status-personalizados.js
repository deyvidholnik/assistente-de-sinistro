const fs = require('fs')
const path = require('path')

async function setupStatusPersonalizados() {
  try {
    console.log('üöÄ Configurando sistema de status personalizados...')
    
    // Ler o script SQL
    const sqlPath = path.join(__dirname, '..', 'sql', 'status-personalizados.sql')
    const sqlScript = fs.readFileSync(sqlPath, 'utf8')
    
    console.log('üìÑ Script SQL carregado com sucesso!')
    console.log('\nüìã O script ir√° executar as seguintes opera√ß√µes:')
    console.log('   ‚úÖ Criar tabela status_personalizados')
    console.log('   ‚úÖ Inserir status padr√£o (pendente, em_analise, etc.)')
    console.log('   ‚úÖ Remover constraints fixas de status')
    console.log('   ‚úÖ Criar valida√ß√£o din√¢mica via trigger')
    console.log('   ‚úÖ Configurar √≠ndices e pol√≠ticas RLS')
    
    console.log('\nüîß Para executar este script no Supabase:')
    console.log('   1. Acesse o Supabase Dashboard')
    console.log('   2. V√° para "SQL Editor"') 
    console.log('   3. Cole o conte√∫do do arquivo sql/status-personalizados.sql')
    console.log('   4. Execute o script')
    
    console.log('\nüìÅ Localiza√ß√£o do script SQL:')
    console.log(`   ${sqlPath}`)
    
    console.log('\n‚ö†Ô∏è  IMPORTANTE: Execute o script SQL no Supabase antes de usar as novas funcionalidades!')
    
    return true
    
  } catch (error) {
    console.error('‚ùå Erro ao configurar status personalizados:', error)
    return false
  }
}

// Executar se chamado diretamente
if (require.main === module) {
  setupStatusPersonalizados()
    .then((success) => {
      if (success) {
        console.log('\n‚úÖ Setup conclu√≠do com sucesso!')
        console.log('   Execute o script SQL no Supabase e depois teste as funcionalidades.')
      } else {
        console.log('\n‚ùå Setup falhou!')
        process.exit(1)
      }
    })
    .catch((error) => {
      console.error('‚ùå Erro:', error)
      process.exit(1)
    })
}

module.exports = { setupStatusPersonalizados }